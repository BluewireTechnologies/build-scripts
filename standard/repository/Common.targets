<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Target Name="PrepareNUnitRunner">
    <!--
        Look for the NUnit tools directory.
        LastMatch is used so that we get the highest version of runner available.
    -->
    <ItemGroup>
        <NUnitPaths Include="packages\Nunit*\tools\nunit3-console.exe" />
    </ItemGroup>
    <FindInList List="@(NUnitPaths)" FindLastMatch="true" ItemSpecToFind="%(NUnitPaths.Identity)" >
        <Output TaskParameter="ItemFound" PropertyName="NUnitRunnerPath"/>
    </FindInList>
    <Message Text="NUnit runner paths: @(NUnitPaths)" />
    <Error Condition="'$(NUnitRunnerPath)' == ''" Text="Could not find NUnit runner executable." />
    <Error Condition="!Exists('$(NUnitRunnerPath)')" Text="Could not find NUnit runner executable." />

    <Message Text="Using NUnit at: $(NUnitRunnerPath)" />
  </Target>

  <Target Name="BuildNUnitTestAssemblies" Condition="'@(NUnitProjects)' != ''">
    <MSBuild Projects="@(NUnitProjects)" Targets="Build" ToolsVersion="$(PreferredMSBuildToolsVersion)" BuildInParallel="true" Properties="Configuration=$(Configuration)" >
        <Output TaskParameter="TargetOutputs" ItemName="NUnitProjectAssemblies" />
    </MSBuild>
    <Error Condition="'@(NUnitProjectAssemblies)' == ''" Text="NUnit projects were found, but the build produced no assemblies." />

    <ConvertToAbsolutePath Paths="@(NUnitProjects)">
        <Output TaskParameter="AbsolutePaths" ItemName="NUnitProjectsAbsolute" />
    </ConvertToAbsolutePath>
    <ItemGroup>
        <NUnitProjectsOutputs Include="%(NUnitProjectAssemblies.MSBuildSourceProjectFile)">
            <TargetPath>%(NUnitProjectAssemblies.Identity)</TargetPath>
        </NUnitProjectsOutputs>
        <NUnitTestProjects Include="%(Identity)">
            <DependsOn>@(NUnitProjectsAbsolute->'%(DependsOn)')</DependsOn>
            <TargetPath>@(NUnitProjectsOutputs->'%(TargetPath)')</TargetPath>
        </NUnitTestProjects>
    </ItemGroup>
  </Target>

  <Target Name="RunNUnitTests" Inputs="@(NUnitTestProjects)" Outputs="%(Identity).skip" DependsOnTargets="PrepareNUnitRunner;BuildNUnitTestAssemblies">
    <Message Text="%(NUnitTestProjects.Identity):" />
    <Message Text="     %(NUnitTestProjects.TargetPath)" />
    <Message Text="     %(NUnitTestProjects.DependsOn)" />

    <MSBuild Projects="%(NUnitTestProjects.Identity)" Condition="'%(NUnitTestProjects.DependsOn)'!=''" Targets="%(NUnitTestProjects.DependsOn)" />

    <Exec Command='"$(NUnitRunnerPath)" --teamcity "%(NUnitTestProjects.TargetPath)"' />
  </Target>

  <!-- BEGIN Versioning targets -->

  <Target Name="_CollectAssemblyInfos" >
    <ItemGroup>
        <_AllProjects Include="$(MSBuildProjectDirectory)\**\*.csproj" />
    </ItemGroup>

    <CreateItem Include="@(_AllProjects->'%(RootDir)%(Directory)**\AssemblyInfo.cs')">
        <Output TaskParameter="Include" ItemName="_AllAssemblyInfos" />
    </CreateItem>
    <CreateItem Include="@(SemVerProjects->'%(RootDir)%(Directory)**\AssemblyInfo.cs')">
        <Output TaskParameter="Include" ItemName="_SemVerAssemblyInfos" />
    </CreateItem>

    <ItemGroup>
        <_AutoVersionedAssemblyInfos Include="@(_AllAssemblyInfos)" Exclude="@(_SemVerAssemblyInfos)" />
    </ItemGroup>
  </Target>

  <Target Name="ApplyAutoVersionNumber" Condition="'$(Version)'!=''" Inputs="@(_AutoVersionedAssemblyInfos)" Outputs="%(Identity).skip" DependsOnTargets="_CollectAssemblyInfos">
    <PropertyGroup>
        <_AssemblyInformationalVersion Condition="'$(SemanticTag)' != ''">$(Version)-$(SemanticTag)</_AssemblyInformationalVersion>
        <_AssemblyInformationalVersion Condition="'$(SemanticTag)' == ''">$(Version)</_AssemblyInformationalVersion>
    </PropertyGroup>
    <Message Text="%(_AutoVersionedAssemblyInfos.Identity):" />
    <Message Text="     AssemblyVersion: $(Version)" />
    <Message Text="     AssemblyFileVersion: $(Version)" />
    <Message Text="     AssemblyInformationalVersion: $(_AssemblyInformationalVersion)" />

    <AssemblyInfo FileName="%(_AutoVersionedAssemblyInfos.Identity)"
        AssemblyVersion="$(Version)"
        AssemblyFileVersion="$(Version)"
        AssemblyInformationalVersion="$(_AssemblyInformationalVersion)"
        />
  </Target>

  <Target Name="ApplySemanticVersionNumber" Inputs="@(_SemVerAssemblyInfos)" Outputs="%(Identity).skip" DependsOnTargets="_CollectAssemblyInfos">
    <AssemblyInfo FileName="%(_SemVerAssemblyInfos.Identity)">
        <Output TaskParameter="AssemblyFileVersion" PropertyName="_ExistingAssemblyFileVersion" />
    </AssemblyInfo>
    <PropertyGroup>
        <_AssemblyInformationalVersion Condition="'$(SemanticTag)' != ''">$(_ExistingAssemblyFileVersion)-$(SemanticTag)</_AssemblyInformationalVersion>
        <_AssemblyInformationalVersion Condition="'$(SemanticTag)' == ''">$(_ExistingAssemblyFileVersion)</_AssemblyInformationalVersion>
        <_AssemblyInformationalVersion Condition="'$(_ExistingAssemblyFileVersion)' == ''"></_AssemblyInformationalVersion>
    </PropertyGroup>

    <Message Text="%(_SemVerAssemblyInfos.Identity):" />
    <Warning Text="     AssemblyFileVersion could not be found" Condition="'$(_AssemblyInformationalVersion)' == ''" />

    <Message Text="     AssemblyInformationalVersion: $(_AssemblyInformationalVersion)" Condition="'$(_AssemblyInformationalVersion)' != ''" />

    <AssemblyInfo FileName="%(_SemVerAssemblyInfos.Identity)"
        AssemblyInformationalVersion="$(_AssemblyInformationalVersion)"
        />
  </Target>

  <UsingTask TaskName="AssemblyInfo" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <FileName ParameterType="System.String" Required="true" />
      <AssemblyVersion ParameterType="System.String" Required="false" Output="true" />
      <AssemblyFileVersion ParameterType="System.String" Required="false" Output="true" />
      <AssemblyInformationalVersion ParameterType="System.String" Required="false" Output="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="$(MSBuildBinPath)\Microsoft.Build.Framework.dll"/>
      <Reference Include="$(MSBuildBinPath)\Microsoft.Build.Utilities.Core.dll"/>
      <Code Type="Class" Language="cs" Source="AssemblyInfo.CodeTask.cs" />
    </Task>
  </UsingTask>

  <!-- END Versioning targets -->

</Project>
